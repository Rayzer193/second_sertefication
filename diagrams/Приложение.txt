@startuml
!theme toy
package model {
abstract class Animals {
  -id_type: str
  -type_animals:str
  __init__()
 {abstract} get_id_type()
 {abstract} get_type_animals()
}

class Pets {
 -kind_animals: str
 +__init__()
 +get_id_type()
 +get_type_animals()
 +get_kind_animals()
}

class PackAnimals {
  -kind_animals: str
 +__init__()
 +get_id_type()
 +get_type_animals()
 +get_kind_animals()
}

class Cats {
 -name:str
 -command:str
 -birth_date: str
 +__init__()
 +__str__()
 +get_name()
 +get_command()
 +get_birth_date()
 +add_command(commands:str)
}

class Dogs {
 -name:str
 -command:str
 -birth_date: str
 +__init__()
 +__str__()
 +get_name()
 +get_command()
 +get_birth_date()
 +add_command(commands:str)
}
class Horses {
 -name:str
 -command:str
 -birth_date: str
 +__init__()
 +__str__()
 +get_name()
 +get_command()
 +get_birth_date()
 +add_command(commands:str)
}
class Hamsters {
 -name:str
 -command:str
 -birth_date: str
 +__init__()
 +__str__()
 +get_name()
 +get_command()
 +get_birth_date()
 +add_command(commands:str)
}

class Camels {
 -name:str
 -command:str
 -birth_date: str
 +__init__()
 +__str__()
 +get_name()
 +get_command()
 +get_birth_date()
 +add_command(commands:str)
}
class Donkeys {
 -name:str
 -command:str
 -birth_date: str
 +__init__()
 +__str__()
 +get_name()
 +get_command()
 +get_birth_date()
 +add_command(commands:str)
}

class RegistryAnimals {
-log_registry: list
-function_add_animal:dict
+__init__()
-add_cat(id_animal:str, name: str,command:str,birth_date:str)
-add_dog(id_animal:str, name: str,command:str,birth_date:str)
-add_hamster(id_animal:str, name: str,command:str,birth_date:str)
-add_horse(id_animal:str, name: str,command:str,birth_date:str)
-add_camel(id_animal:str, name: str,command:str,birth_date:str)
-add_donkey(id_animal:str, name: str,command:str,birth_date:str)
+add_animal(kind:str, name: str,command:str,birth_date:str)
+get_log_registry()
+number_of_animals()
+tabl_registry()
+list_kind_pets()
+list_kind_pack()
+find_animal(index:int)
+get_command(index)
+add_command(index:int, commands:str)
}
}

RegistryAnimals *-[bold]- Cats
RegistryAnimals *-[bold]- Dogs
RegistryAnimals *-[bold]- Hamsters
RegistryAnimals *-[bold]- Horses
RegistryAnimals *-[bold]- Camels
RegistryAnimals *-[bold]- Donkeys

Animals <|-[#green,bold]- Pets
Animals <|-[#green,bold]- PackAnimals

Pets <|-[#green,bold]- Cats
Pets <|-[#green,bold]- Dogs
Pets <|-[#green,bold]- Hamsters

PackAnimals <|-[#green,bold]- Horses
PackAnimals <|-[#green,bold]- Camels
PackAnimals <|-[#green,bold]- Donkeys

package data {
class SqLiteManager {
+path:str
-function_read_animal:dict
-dict_kinds:dict
+__init__()
-read_cat(log_registry: RegistryAnimals)
-read_dog(log_registry: RegistryAnimals)
-read_hamster(log_registry: RegistryAnimals)
-read_horse(log_registry: RegistryAnimals)
-read_camel(log_registry: RegistryAnimals)
-read_donkey(log_registry: RegistryAnimals)
+read_db(log_registry: RegistryAnimals)
+save_animal(type_id:str, kind:str, name:str, command:str, birth_date:str)
+save_command(index:int, log_registry: RegistryAnimals)
}
}


RegistryAnimals <-- SqLiteManager

package "view"{
  abstract class View {
  {abstract} set_presenter(presenter: Presenter)
  {abstract} start()
}
  class Console  {
  -working: bool                                      
  +presenter: Presenter
  +__init__()
  {static} -get_number(size: int, text: str)
  {static} -get_date(text: str)
  {static} -save_animal(kind;str, name;str, command:str, birth_date:str)
  -show_add_command()
  -add_command(index:int)
  -add_animal(type_id:str, kinds:set)
  -add_animals()
  +set_presenter(presenter: Presenter)
  +start()
}
class Counter {
  +count:int
  +__init__()
  +__enter__()
  +__exit__()
  +add()
  +get_count()
}
}
View <|-[#green,bold]- Console
Counter -[bold]-* Console

package presenter {
 class Presenter {
  +view: View
  +log_registry:RegistryAnimal
  +data: SqLiteManager
  +read_db()
  +get_tabl_registry()
  +all_kinds_pets()
  +all_kinds_pack()
  +add_animal(kind:str, name:str, command:str, birth_date:str)
  +save_animal_into_bd(type_id:str, kind:str, name:str, command:str, birth_date:str)
  +find_animal(index:int)
  +get_command(index:int)
  +add_command(index:int, commands:str)
  +size_registry()
  +save_command(index:int)
}
}
Presenter -[#red,dashed,thickness=3]-> RegistryAnimals
Presenter -[#red,dashed,thickness=3]-> View
Presenter -[#red,dashed,thickness=3]-> SqLiteManager

class Service {
  +registry: RegistryAnimals
  +view: Console
  +presenter:Presenter
  +start()
}

Service -[#red,dashed,thickness=3]-> RegistryAnimals
Service -[#red,dashed,thickness=3]-> View
Service -[#red,dashed,thickness=3]-> Presenter

@enduml